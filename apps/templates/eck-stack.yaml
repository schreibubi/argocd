apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: eck-stack
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  sources:
    - repoURL: https://helm.elastic.co
      chart: eck-stack
      targetRevision: 0.8.0
      helm:
        parameters:
        - name: "eck-logstash.enabled"
          value: "true"
        - name: "eck-beats.enabled"
          value: "true"
        valuesObject:
          eck-elasticsearch:
            annotations:
              eck.k8s.elastic.co/license: basic
            nodeSets:
            - name: default
              count: 2
              config:
                node.store.allow_mmap: false
              volumeClaimTemplates:
              - metadata:
                  name: elasticsearch-data
                spec:
                  accessModes:
                  - ReadWriteOnce
                  resources:
                    requests:
                      storage: 10Gi
            http:
              tls:
                selfSignedCertificate:
                  disabled: true
              service:
                spec:
                  type: LoadBalancer
          eck-kibana:
            annotations:
              eck.k8s.elastic.co/license: basic
            spec:
              http:
                tls:
                  selfSignedCertificate:
                    disabled: true
                service:
                  spec:
                    type: LoadBalancer
          eck-logstash:
            annotations:
              eck.k8s.elastic.co/license: basic
            elasticsearchRefs:
              - clusterName: eck
                name: elasticsearch
            pipelines:
              - pipeline.id: main
                config.string: |
                  input {
                    tcp {
                      port => 5000
                      type => syslog
                    }
                  }
                  filter {
                    if [type] == "syslog" {
                      grok {
                        match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
                        add_field => [ "received_at", "%{@timestamp}" ]
                        add_field => [ "received_from", "%{host}" ]
                      }
                      date {
                        match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
                      }
                    }
                  }
                  output {
                    elasticsearch {
                      hosts => [ "${ECK_ES_HOSTS}" ]
                      user => "${ECK_ES_USER}"
                      password => "${ECK_ES_PASSWORD}"
                    }
                  }
            services:
              - name: logstash-tcp-input
                service:
                  spec:
                    type: ClusterIP
                    ports:
                      - port: 5000
                        name: "logstash-input-service"
                        protocol: TCP
                        targetPort: 5000
          eck-beats:
            annotations:
              eck.k8s.elastic.co/license: basic
            spec:
              type: metricbeat
              version: 8.11.3
              elasticsearchRef:
                name: eck-elasticsearch
              kibanaRef:
                name: eck-kibana
              config:
                metricbeat:
                  autodiscover:
                    providers:
                    - hints:
                        default_config: {}
                        enabled: "true"
                      node: ${NODE_NAME}
                      type: kubernetes
                  modules:
                  - module: system
                    period: 10s
                    metricsets:
                    - cpu
                    - load
                    - memory
                    - network
                    - process
                    - process_summary
                    process:
                      include_top_n:
                        by_cpu: 5
                        by_memory: 5
                    processes:
                    - .*
                  - module: system
                    period: 1m
                    metricsets:
                    - filesystem
                    - fsstat
                    processors:
                    - drop_event:
                        when:
                          regexp:
                            system:
                              filesystem:
                                mount_point: ^/(sys|cgroup|proc|dev|etc|host|lib)($|/)
                  - module: kubernetes
                    period: 10s
                    node: ${NODE_NAME}
                    hosts:
                    - https://${NODE_NAME}:10250
                    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                    ssl:
                      verification_mode: none
                    metricsets:
                    - node
                    - system
                    - pod
                    - container
                    - volume
                processors:
                - add_cloud_metadata: {}
                - add_host_metadata: {}
              daemonSet:
                podTemplate:
                  spec:
                    serviceAccountName: metricbeat
                    automountServiceAccountToken: true # some older Beat versions are depending on this settings presence in k8s context
                    containers:
                    - args:
                      - -e
                      - -c
                      - /etc/beat.yml
                      - -system.hostfs=/hostfs
                      name: metricbeat
                      volumeMounts:
                      - mountPath: /hostfs/sys/fs/cgroup
                        name: cgroup
                      - mountPath: /var/run/docker.sock
                        name: dockersock
                      - mountPath: /hostfs/proc
                        name: proc
                      env:
                      - name: NODE_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: spec.nodeName
                    dnsPolicy: ClusterFirstWithHostNet
                    hostNetwork: true # Allows to provide richer host metadata
                    securityContext:
                      runAsUser: 0
                    terminationGracePeriodSeconds: 30
                    volumes:
                    - hostPath:
                        path: /sys/fs/cgroup
                      name: cgroup
                    - hostPath:
                        path: /var/run/docker.sock
                      name: dockersock
                    - hostPath:
                        path: /proc
                      name: proc

            clusterRole:
              # permissions needed for metricbeat
              # source: https://www.elastic.co/guide/en/beats/metricbeat/current/metricbeat-module-kubernetes.html
              name: metricbeat
              rules:
              - apiGroups:
                - ""
                resources:
                - nodes
                - namespaces
                - events
                - pods
                verbs:
                - get
                - list
                - watch
              - apiGroups:
                - "extensions"
                resources:
                - replicasets
                verbs:
                - get
                - list
                - watch
              - apiGroups:
                - apps
                resources:
                - statefulsets
                - deployments
                - replicasets
                verbs:
                - get
                - list
                - watch
              - apiGroups:
                - ""
                resources:
                - nodes/stats
                verbs:
                - get
              - nonResourceURLs:
                - /metrics
                verbs:
                - get

            serviceAccount:
              name: metricbeat

            clusterRoleBinding:
              name: metricbeat
              subjects:
              - kind: ServiceAccount
                name: metricbeat
              roleRef:
                kind: ClusterRole
                name: metricbeat
                apiGroup: rbac.authorization.k8s.io
    - repoURL: {{ .Values.spec.source.repoURL }}
      targetRevision: {{ .Values.spec.source.targetRevision }}
      path: config/eck-stack
  destination:
    server: {{ .Values.spec.destination.server }}
    namespace: elastic-stack
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
